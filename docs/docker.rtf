{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fswiss\fcharset0 ArialMT;\f2\fswiss\fcharset0 Arial-BoldMT;
\f3\fnil\fcharset0 Monaco;\f4\fnil\fcharset0 HelveticaNeue;\f5\fnil\fcharset0 Menlo-Regular;
\f6\fnil\fcharset0 Menlo-Bold;\f7\froman\fcharset0 Times-Roman;\f8\fnil\fcharset204 PTSerif-Regular;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red43\green48\blue57;\red247\green247\blue249;
\red242\green242\blue242;\red43\green48\blue57;\red247\green247\blue249;\red60\green60\blue60;\red239\green239\blue239;
\red38\green38\blue38;\red255\green255\blue255;\red0\green0\blue0;\red242\green242\blue242;\red11\green12\blue12;
\red65\green128\blue255;\red5\green10\blue30;\red60\green64\blue68;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c22353\c24706\c28627;\cssrgb\c97647\c97647\c98039;
\cssrgb\c96078\c96078\c96078;\cssrgb\c22353\c24706\c28627;\cssrgb\c97647\c97647\c98039;\cssrgb\c30196\c30196\c30196;\cssrgb\c94902\c94902\c94902;
\cssrgb\c20000\c20000\c20000;\cssrgb\c100000\c100000\c100000;\csgray\c0;\cssrgb\c96078\c96078\c96078;\cssrgb\c4706\c5098\c5490;
\cssrgb\c31373\c59216\c100000\c18039;\cssrgb\c1569\c4706\c15686;\cssrgb\c30196\c31765\c33725;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid202\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\margl1440\margr1440\vieww28600\viewh17440\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
Install docker in ec2\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
curl -fsSL https://get.docker.com -o install-docker.sh\
sh install-docker.sh\
\
Get docker info : sudo docker info\
\

\f1 \cf2 Run docker container: \
docker container run <image name>[hello-world]\
\
\pard\pardeftab720\partightenfactor0
\cf2 \outl0\strokewidth0 docker container run -it alpine \
\
\

\f2\b Check docker images in locally
\f1\b0  : docker images ls\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\

\f2\b Assign ubantu user to docker group
\f1\b0 \
Group names command: cat /etc/group\
Add user to group: sudo usermod -aG docker ubantu  \
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \outl0\strokewidth0 \

\f2\b Port forwarding 
\f1\b0 \
docker container run -p 32000:80 -d ngnix\
\
docker container run -d -P ngnix\
Docker will assign open ports and assign to ngnix server\
\

\f2\b Assign name to container
\f1\b0 \outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \outl0\strokewidth0 docker container run -d -P \'97name my-container ngnix\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\

\f2\b Mysql database\
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf3 \cb4 \strokec3 docker \cf2 \cb1 \outl0\strokewidth0 container\cf3 \cb4 \outl0\strokewidth0 \strokec3  run -d --name mysqlwithoutvol -P -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=emp -e 
\f3\fs26\fsmilli13300 \cf3 \cb5 \strokec3 MYSQL_USER=devuser -e MYSQL_PASSWORD=rootroot 
\f1\fs26 \cf3 \cb4 \strokec3 root mysql:8.0\
docker container exec -it mysql -u root -p \cf6 \cb7 \outl0\strokewidth0 password\cf8 \cb9 \outl0\strokewidth0 \strokec8 \
\
\pard\pardeftab720\partightenfactor0

\f2\b \cf8 create container and runs in background
\f1\b0 \
docker container run -d -P --name mycontainer httpd\cf2 \cb1 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\partightenfactor0

\f2\b \cf10 \cb11 \outl0\strokewidth0 create a image from filesystem
\f1\b0 \cf2 \cb1 \
\pard\pardeftab560\slleading20\partightenfactor0

\f4 \cf0 \kerning1\expnd0\expndtw0 docker image build -t myimage <path of filesystem>
\f1 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\partightenfactor0

\f2\b \cf10 \cb11 \strokec10 create a image from container
\f1\b0 \cf2 \cb1 \strokec2 \
\pard\pardeftab560\slleading20\partightenfactor0

\f4 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 docker container commit mycontainer firstimage
\f1 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab560\pardirnatural\partightenfactor0

\f2\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 List all the containers
\f1\b0 \
\pard\pardeftab560\slleading20\partightenfactor0

\f4 \cf0 docker container ls\
\
\pard\pardeftab560\pardirnatural\partightenfactor0

\f2\b \cf0 List all the container id\'92s 
\f1\b0 \
\pard\pardeftab560\slleading20\partightenfactor0

\f4 \cf0 docker container ls -a -q\
\

\f2\b Remove container\

\f4\b0 docker container rm -f <container id>\
\

\f2\b Remove all containers\

\f4\b0 docker container rm -f $(docker container ls -a -q)\
\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls1\ilvl0
\f2\b \cf0 Remove all the images
\f1\b0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 docker image rm $(docker image ls -q)\
\

\f2\b docker image build
\f1\b0 \
	\'97 build-args\
\
\pard\pardeftab720\partightenfactor0

\f2\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 docker volume
\f1\b0 \
docker volume ls \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f5\fs22 \cf12 \kerning1\expnd0\expndtw0 \CocoaLigature0 \outl0\strokewidth0 docker volume create mysql-vol\
\
\pard\pardeftab720\partightenfactor0

\f2\b\fs26 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 docker  
\f6\fs22 \cf12 \kerning1\expnd0\expndtw0 \CocoaLigature0 With volume attach
\f5\b0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
docker container run -d --name mysqlwithvol -P -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=emp -e MYSQL_USER=devuser -e MYSQL_PASSWORD=rootroot -v mysql-vol:/var/lib/mysql mysql:8.0
\f1\fs26 \cf6 \cb7 \expnd0\expndtw0\kerning0
\CocoaLigature1 \

\f5\fs22 \cf12 \cb1 \kerning1\expnd0\expndtw0 \CocoaLigature0 docker container exec -it mysqlwithoutvol1 mysql -u devuser -p\
\
docker container run -d --name mysqlwithoutvol1 -P -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=emp -e MYSQL_USER=devuser -e MYSQL_PASSWORD=rootroot  mysql:8.0
\f1\fs26 \cf2 \expnd0\expndtw0\kerning0
\CocoaLigature1 \outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \
\pard\pardeftab720\partightenfactor0

\f2\b \cf2 \outl0\strokewidth0 Mysql database\
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf6 \cb7 docker \cf2 \cb1 container\cf6 \cb7  run -d --name mysqlwithoutvol -P -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=emp -e 
\f3\fs26\fsmilli13300 \cb13 MYSQL_USER=devuser -e MYSQL_PASSWORD=rootroot 
\f1\fs26 \cb7 root mysql:8.0\
docker container exec -it mysql -u root -p password\cf2 \cb1 \outl0\strokewidth0 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf2 \

\f2\b Create docker network
\f1\b0 \
\pard\pardeftab720\partightenfactor0
\cf2 \outl0\strokewidth0 docker exec mycontainer /path/to/test.sh\

\f7\fs28 \cf14 \outl0\strokewidth0 docker exec -it mycontainer /bin/bash\
\
\
\
21-Jan-2024\
Multi staging builds \
SAST 
\f1\fs32 \cb15 \strokec16 Static Application Security testing\cb11 \strokec17 \'a0
\f7\fs28 \cb1 \strokec14 \
DAST 
\f1\fs32 \cb11 \strokec17 Dynamic Application Security Testing
\f7\fs28 \cb1 \strokec14 \
SCA Software component analysis
\fs24 \outl0\strokewidth0 \
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf0 \outl0\strokewidth0 \strokec2 \
We use our own images and we use our base images like scb:jdk17, scb:DOtNet8 \
\
Registries available\
Default registry is docker hub provider\
	\outl0\strokewidth0 docker registry \outl0\strokewidth0 \strokec2 \
Also we can use providers aswell\
	Azure Container registry\
	AWS Elastic Container Registry\
	\outl0\strokewidth0 Google Container Registry\outl0\strokewidth0 \strokec2 \
	JFrog\
\
\
\
Work\
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0
\f8\fs44 \cf10 \cb11 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}Run container alpine.\
{\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 stop the docker container\cb1 \
\ls2\ilvl0\cb11 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 remove the docker image\cb1 \
\ls2\ilvl0\cb11 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 build the docker image\cb1 \
\ls2\ilvl0\cb11 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 start all the containers using docker compose\cb1 \
\ls2\ilvl0\cb11 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 stop all the containers docker compose\cb1 \
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 \
\pard\tx720\pardeftab720\partightenfactor0
\cf10 Install docker\
Check docker info\
Add ubantu user to docker group\
Run 3  containers php/ngnix/httpd\
\
\
\
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf10 \cb11 \strokec10 Some of the instructions to create docker file\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\partightenfactor0
\ls3\ilvl1\cf10 \cb11 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 FROM\cb1 \
\ls3\ilvl1\cb11 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 RUN\cb1 \
\ls3\ilvl1\cb11 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 EXPOSE\cb1 \
\ls3\ilvl1\cb11 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 CMD\cb1 \
\ls3\ilvl1\cb11 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 ENTRYPOINT\cb1 \
\ls3\ilvl1\cb11 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 LABEL\cb1 \
\ls3\ilvl1\cb11 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 ADD\cb1 \
\ls3\ilvl1\cb11 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 COPY\cb1 \
\ls3\ilvl1\cb11 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 VOLUME\cb1 \
}